name: Deploy images to Docker

on:
    push:
        branches: [ master ]

jobs:
    buildandpush:
        runs-on: ubuntu-latest
        env:
            S6V: 2.2.0.1
        steps:
            - name: Get latest release commit eLabFTW
              id: elabftw_version
              uses: abatilo/release-info-action@v1.3.0
              with:
                  owner: elabftw
                  repo: elabftw

            - name: Verify release commit elabftw
              env:
                  LATEST: ${{ steps.elabftw_version.outputs.latest_tag }}
                  LATEST_DATE: ${{ steps.elabftw_version.outputs.latest_tag_published_at }}
                  LATEST_COMMIT: ${{ steps.elabftw_version.outputs.target_commitish }}
              run: |
                  echo "eLabFTW: Version $LATEST was released $LATEST_DATE and has commit LATEST_COMMIT"

            - name: Get latest release commit eLabimg
              id: elabimg_version
              uses: abatilo/release-info-action@v1.3.0
              with:
                  owner: elabftw
                  repo: elabimg

            - name: Verify release commit elabimg
              env:
                  LATEST: ${{ steps.elabimg_version.outputs.latest_tag }}
                  LATEST_DATE: ${{ steps.elabimg_version.outputs.latest_tag_published_at }}
                  LATEST_COMMIT: ${{ steps.elabimg_version.outputs.target_commitish }}
              run: |
                  echo "eLabIMG: Version $LATEST was released $LATEST_DATE and has commit LATEST_COMMIT"

            - name: Checkout elabimg repo
              uses: actions/checkout@v2
              with:
                  repository: "din14970/elabimg"
                  ref: "hypernext"

            # https://github.com/docker/setup-qemu-action#usage
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1

            # https://github.com/marketplace/actions/docker-setup-buildx
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            # https://github.com/docker/login-action#docker-hub
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_TOKEN }}

            # Sadly we need different build args for different architectures
            # We adapt https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way/
            # with manual run commands
            - name: Build for AMD64
              env:
                  AMDTAG: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-amd64
              run: |
                docker build -t $AMDTAG --build-arg ARCH=amd64/ ARCHITECTURE=amd64 ELABFTW_VERSION=${{ steps.elabftw_version.outputs.latest_tag }} S6_OVERLAY_VERSION=$S6V .
                docker push $AMDTAG
            
            - name: Build for ARM32V7
              env:
                  ARMTAG: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm32v7
              run: |
                docker build -t $ARMTAG --build-arg ARCH=arm32v7/ ARCHITECTURE=arm ELABFTW_VERSION=${{ steps.elabftw_version.outputs.latest_tag }} S6_OVERLAY_VERSION=$S6V .
                docker push $ARMTAG

            - name: Build for ARM64
              env:
                  ARM64TAG: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm64
              run: |
                docker build -t $ARM64TAG --build-arg ARCH=arm64v8/ ARCHITECTURE=aarch64 ELABFTW_VERSION=${{ steps.elabftw_version.outputs.latest_tag }} S6_OVERLAY_VERSION=$S6V .
                docker push $ARM64TAG

            - name: Create and push the manifest file
              env:
                  PUSHTAG: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-latest
              run: |
                docker manifest create $PUSHTAG --ammend $AMDTAG --ammend $ARMTAG --ammend $ARM64TAG
                docker manifest push $PUSHTAG

            # https://github.com/docker/build-push-action#multi-platform-image
            #            - name: Build and push to Docker Hub
            #              id: docker_build
            #              uses: docker/build-push-action@v2
            #              with:
            #                context: .
            #                file: Dockerfile_template
            #                platforms: linux/amd64,linux/arm/v7,linux/arm64
            #                push: true
            #                tags: |
            #                    ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:latest
            #                    ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ steps.elabftw_version.outputs.latest_tag }}
            #            - name: Check the output
            #              run: echo ${{ steps.docker_build.outputs.digest }}
