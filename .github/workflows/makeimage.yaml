name: Deploy images to Docker

on:
    push:
        branches: [ master ]

jobs:
    buildandpush:
        runs-on: ubuntu-latest
        env:
            S6V: 2.2.0.1
            DOCKER_FILE: Dockerfile_template
        steps:
            - name: Get latest release commit eLabFTW
              id: elabftw_version
              uses: abatilo/release-info-action@v1.3.0
              with:
                  owner: elabftw
                  repo: elabftw

            - name: Verify release commit elabftw
              env:
                  LATEST: ${{ steps.elabftw_version.outputs.latest_tag }}
                  LATEST_DATE: ${{ steps.elabftw_version.outputs.latest_tag_published_at }}
                  LATEST_COMMIT: ${{ steps.elabftw_version.outputs.target_commitish }}
              run: |
                  echo "eLabFTW: Version $LATEST was released $LATEST_DATE and has commit $LATEST_COMMIT"

            - name: Checkout elabimg repo
              uses: actions/checkout@v2
              with:
                  repository: "din14970/elabimg"
                  ref: "hypernext"

            # https://github.com/docker/setup-qemu-action#usage
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1

            # https://github.com/marketplace/actions/docker-setup-buildx
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            # https://github.com/docker/login-action#docker-hub
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_TOKEN }}

            # Sadly we need different build args for different architectures
            # We adapt https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way/
            # with manual run commands
            - name: Build for AMD64
              env:
                  ELAB_BRANCH: hypernext
              run: |
                docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-amd64 --build-arg ARCHITECTURE=amd64 --build-arg ELABFTW_VERSION=${{ hypernext }} --build-arg S6_OVERLAY_VERSION=$S6V -f $DOCKER_FILE .
                docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-amd64
            
            - name: Build for ARM32V7
              env:
                  ELAB_BRANCH: hypernext
              run: |
                docker buildx build --platform linux/arm/v7 -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm32v7 --build-arg ARCHITECTURE=arm --build-arg ELABFTW_VERSION=${{ hypernext }} --build-arg S6_OVERLAY_VERSION=$S6V -f $DOCKER_FILE .
                docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm32v7

            - name: Build for ARM64
              env:
                  ELAB_BRANCH: hypernext
              run: |
                docker buildx build --platform linux/arm64/v8 -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm64 --build-arg ARCHITECTURE=aarch64 --build-arg ELABFTW_VERSION=${{ hypernext }} --build-arg S6_OVERLAY_VERSION=$S6V -f $DOCKER_FILE .
                docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm32v7

            - name: Create and push the manifest file
              run: |
                docker manifest create ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-latest --ammend ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-amd64 --ammend ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm32v7 --ammend ${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-arm64
                docker manifest push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:manifest-latest

            # https://github.com/docker/build-push-action#multi-platform-image
            #            - name: Build and push to Docker Hub
            #              id: docker_build
            #              uses: docker/build-push-action@v2
            #              with:
            #                context: .
            #                file: Dockerfile_template
            #                platforms: linux/amd64,linux/arm/v7,linux/arm64
            #                push: true
            #                tags: |
            #                    ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:latest
            #                    ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:${{ steps.elabftw_version.outputs.latest_tag }}
            #            - name: Check the output
            #              run: echo ${{ steps.docker_build.outputs.digest }}
